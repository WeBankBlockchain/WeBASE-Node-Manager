<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--对应mapper接口 -->
<mapper namespace="com.webank.webase.node.mgr.transhash.TransHashMapper">
  <resultMap id="transHashMap" type="com.webank.webase.node.mgr.transhash.TbTransHash">
    <id column="trans_hash" javaType="java.lang.String" jdbcType="VARCHAR" property="transHash"/>
    <result column="network_id" javaType="java.lang.Integer" jdbcType="INTEGER"
      property="networkId"/>
    <result column="block_number" javaType="java.math.BigInteger" jdbcType="INTEGER"
      property="blockNumber"/>
    <result column="statistics_flag" javaType="java.lang.Integer" jdbcType="INTEGER"
      property="statisticsFlag"/>
    <result column="block_timestamp" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"
      property="blockTimestamp"/>
    <result column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"
      property="createTime"/>
    <result column="modify_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"
      property="modifyTime"/>
  </resultMap>

  <sql id="NEW_ROW_COLUMN">
		(trans_hash,network_id,block_number,block_timestamp,create_time,modify_time)
	</sql>


  <insert id="addTransRow" parameterType="com.webank.webase.node.mgr.transhash.TbTransHash">
    insert ignore into tb_trans_hash
    <include refid="NEW_ROW_COLUMN"/>
    values(#{transHash},#{networkId},#{blockNumber},#{blockTimestamp},NOW(),NOW())
  </insert>


  <select id="countOfTransHash" parameterType="com.webank.webase.node.mgr.transhash.TransListParam"
    resultType="java.lang.Integer">
    select count(1) from tb_trans_hash where 1=1
    <if test="param.networkId != null">
      and network_id = #{param.networkId}
    </if>
    <if test="param.transHash != null and param.transHash != ''">
      and trans_hash = #{param.transHash}
    </if>
    <if test="param.blockNumber != null">
      and block_number = #{param.blockNumber}
    </if>
  </select>


  <select id="listOfTransHash" parameterType="com.webank.webase.node.mgr.transhash.TransListParam"
    resultMap="transHashMap">
    select * from tb_trans_hash where 1=1
    <if test="param.networkId != null">
      and network_id = #{param.networkId}
    </if>
    <if test="param.transHash != null and param.transHash != ''">
      and trans_hash = #{param.transHash}
    </if>
    <if test="param.blockNumber != null">
      and block_number = #{param.blockNumber}
    </if>
    <if test="param.flagSortedByBlock != null and param.flagSortedByBlock != ''">
      order by block_number ${param.flagSortedByBlock}
    </if>
    <if test="param.start != null and param.pageSize != null">
      limit #{param.start},#{param.pageSize}
    </if>
  </select>

  <select id="listOfUnStatTransHash" resultMap="transHashMap">
    select *
    from tb_trans_hash
    where network_id in
    <foreach collection="networkList" open="(" separator="," close=")" item="item" index="index">
    #{item}
    </foreach>
    and statistics_flag=1 order by block_number
    limit 0,10000
  </select>

  <select id="listOfUnStatTransHashByJob" resultMap="transHashMap">
        select *
        from tb_trans_hash 
        where statistics_flag=1
          and MOD(block_number,#{shardingTotalCount}) = #{shardingItem}
        order by block_number
        limit 0,10000
    </select>

  <select id="queryMinMaxBlock" resultType="com.webank.webase.node.mgr.block.MinMaxBlock">
		select network_id as networkId,max(block_number) as maxBlockNumber,min(block_number) as minBLockNumber
		from tb_trans_hash group by network_id
	</select>

  <delete id="deleteSomeTrans">
		delete from tb_trans_hash where network_id = #{networkId} and statistics_flag=2 and block_number &lt; #{deleteNumber}
	</delete>

  <update id="updateTransStatFlag">
        update tb_trans_hash 
        set statistics_flag = 2
        where trans_hash = #{transHash}
    </update>
</mapper>