<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--对应mapper接口 -->
<mapper namespace="com.webank.webase.node.mgr.group.GroupMapper">
    <resultMap id="groupMap" type="com.webank.webase.node.mgr.group.entity.TbGroup">
        <id column="group_id" javaType="java.lang.String" jdbcType="VARCHAR" property="groupId"/>
        <result column="group_name" javaType="java.lang.String" jdbcType="VARCHAR"
                property="groupName"/>
        <result column="group_status" javaType="java.lang.Integer" jdbcType="INTEGER"
                property="groupStatus"/>
        <result column="node_count" javaType="java.lang.Integer" jdbcType="INTEGER"
                property="nodeCount"/>
        <result column="description" javaType="java.lang.String" jdbcType="VARCHAR"
                property="description"/>
        <result column="group_type" javaType="java.lang.Integer" jdbcType="INTEGER"
                property="groupType"/>
        <result column="group_timestamp" javaType="java.lang.String" jdbcType="VARCHAR"
                property="groupTimestamp"/>
        <result column="node_id_list" javaType="java.lang.String" jdbcType="VARCHAR"
                property="nodeIdList"/>
        <result column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"
                property="createTime"/>
        <result column="modify_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"
                property="modifyTime"/>
        <result column="chain_id" jdbcType="INTEGER" property="chainId" />
        <result column="chain_name" jdbcType="VARCHAR" property="chainName" />
        <result column="encrypt_type" jdbcType="INTEGER" property="encryptType" />
    </resultMap>


    <resultMap id="statisticalTransMap"
               type="com.webank.webase.node.mgr.group.entity.StatisticalGroupTransInfo">
        <result column="group_id" javaType="java.lang.String" jdbcType="VARCHAR"
                property="groupId"/>
        <result column="maxDay" javaType="java.time.LocalDate" jdbcType="TIMESTAMP" property="maxDay"/>
        <result column="block_number" javaType="java.math.BigInteger" jdbcType="INTEGER"
                property="blockNumber"/>
        <result column="trans_count" javaType="java.math.BigInteger" jdbcType="INTEGER"
                property="transCount"/>
    </resultMap>

    <sql id="QUERY_ROW_COLUMN">
        front_id frontId,front_ip frontIp,front_port frontPort,create_time createTime,modify_time modifyTime,chain_id, chain_name
    </sql>

    <insert id="save" parameterType="com.webank.webase.node.mgr.group.entity.TbGroup">
        insert into tb_group
        (group_id,group_name,node_count,description,group_type,group_status,group_timestamp,node_id_list,create_time,modify_time,chain_id,chain_name,encrypt_type)
        values(#{groupId},#{groupName},#{nodeCount},#{description},#{groupType},#{groupStatus},p
        #{groupTimestamp},#{nodeIdList},NOW(),NOW(),#{chainId,jdbcType=INTEGER}, #{chainName,jdbcType=VARCHAR}, #{encryptType,jdbcType=INTEGER})
        ON DUPLICATE KEY UPDATE node_count=#{nodeCount},modify_time=NOW()
    </insert>

    <insert id="insertSelective" parameterType="com.webank.webase.node.mgr.group.entity.TbGroup">
        insert into tb_group
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="groupId != null" >
                group_id,
            </if>
            <if test="groupName != null" >
                group_name,
            </if>
            <if test="nodeCount != null" >
                node_count,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="groupType != null" >
                group_type,
            </if>
            <if test="groupStatus != null" >
                group_status,
            </if>
            <if test="groupTimestamp != null" >
                group_timestamp,
            </if>
            <if test="nodeIdList != null" >
                node_id_list,
            </if>
            <if test="chainId != null" >
                chain_id,
            </if>
            <if test="chainName != null" >
                chain_name,
            </if>
            <if test="encryptType != null" >
                encrypt_type,
            </if>
            create_time,modify_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="groupId != null" >
                #{groupId,jdbcType=BIGINT},
            </if>
            <if test="groupName != null" >
                #{groupName},
            </if>
            <if test="nodeCount != null" >
                #{nodeCount},
            </if>
            <if test="description != null" >
                #{description},
            </if>
            <if test="groupType != null" >
                #{groupType},
            </if>
            <if test="groupStatus != null" >
                #{groupStatus},
            </if>
            <if test="groupTimestamp != null" >
                #{groupTimestamp},
            </if>
            <if test="nodeIdList != null" >
                #{nodeIdList},
            </if>
            <if test="chainId != null" >
                #{chainId},
            </if>
            <if test="chainName != null" >
                #{chainName},
            </if>
            <if test="encryptType != null" >
                #{encryptType},
            </if>
            NOW(),NOW(),
        </trim>
        ON DUPLICATE KEY UPDATE node_count=#{nodeCount},modify_time=NOW()
    </insert>

    <delete id="remove" parameterType="java.lang.String">
        delete from tb_group where group_id=#{groupId}
    </delete>

    <update id="updateStatus">
        update tb_group set group_status=#{groupStatus},modify_time=NOW() where group_id=#{groupId}
    </update>

    <update id="updateDescription">
        update tb_group set description=#{description},modify_time=NOW() where group_id=#{groupId}
    </update>

    <update id="updateNodeCount">
        update tb_group set node_count=#{nodeCount},modify_time=NOW() where group_id=#{groupId}
    </update>

    <select id="getCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1) from tb_group where 1 = 1
        <if test="groupId != null and groupId !=''">
            and group_id = #{groupId}
        </if>
        <if test="groupStatus != null and groupStatus !=''">
            and group_status = #{groupStatus}
        </if>
    </select>

    <select id="getList" resultMap="groupMap">
        select * from tb_group where 1=1
        <if test="groupStatus != null and groupStatus !=''">
            and group_status = #{groupStatus}
        </if>
        order by group_id asc
    </select>

    <select id="getGroupById" resultMap="groupMap">
        select * from tb_group
        where group_id = #{groupId}
    </select>


    <select id="queryLatestStatisticalTrans" resultMap="statisticalTransMap">
        select a.group_id,b.maxDay,c.block_number,c.trans_count from tb_group a
        LEFT JOIN
        (select group_id,max(trans_day) as maxDay from tb_trans_daily GROUP BY group_id)b
        on (a.group_id = b.group_id)
        LEFT JOIN
        tb_trans_daily c on(b.group_id = c.group_id and b.maxDay = c.trans_day)
    </select>

    <select id="getGeneral" resultType="com.webank.webase.node.mgr.group.entity.GroupGeneral">
        SELECT a.group_id groupId,a.node_count nodeCount,b.contractCount
        FROM tb_group a
        LEFT 	JOIN
        (
        select group_id,count(1)
        contractCount from tb_external_contract GROUP BY group_id
        )b on(a.group_id = b.group_id)
        where a.group_id = #{groupId}
    </select>

    <delete id="deleteByChainId" parameterType="java.lang.Integer">
        delete from tb_group where chain_id=#{chainId}
    </delete>
</mapper>